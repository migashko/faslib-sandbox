// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#ifndef PROTOBUF_request_2eproto__INCLUDED
#define PROTOBUF_request_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace benchmark {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_request_2eproto();
void protobuf_AssignDesc_request_2eproto();
void protobuf_ShutdownFile_request_2eproto();

class request;

// ===================================================================

class request : public ::google::protobuf::Message {
 public:
  request();
  virtual ~request();
  
  request(const request& from);
  
  inline request& operator=(const request& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const request& default_instance();
  
  void Swap(request* other);
  
  // implements Message ----------------------------------------------
  
  request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const request& from);
  void MergeFrom(const request& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 oid = 1;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 1;
  inline ::google::protobuf::int32 oid() const;
  inline void set_oid(::google::protobuf::int32 value);
  
  // required int32 offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);
  
  // required int32 limit = 3;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 3;
  inline ::google::protobuf::int32 limit() const;
  inline void set_limit(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:benchmark.request)
 private:
  inline void set_has_oid();
  inline void clear_has_oid();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_limit();
  inline void clear_has_limit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 oid_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 limit_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();
  
  void InitAsDefaultInstance();
  static request* default_instance_;
};
// ===================================================================


// ===================================================================

// request

// required int32 oid = 1;
inline bool request::has_oid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void request::set_has_oid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void request::clear_has_oid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void request::clear_oid() {
  oid_ = 0;
  clear_has_oid();
}
inline ::google::protobuf::int32 request::oid() const {
  return oid_;
}
inline void request::set_oid(::google::protobuf::int32 value) {
  set_has_oid();
  oid_ = value;
}

// required int32 offset = 2;
inline bool request::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void request::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void request::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void request::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 request::offset() const {
  return offset_;
}
inline void request::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// required int32 limit = 3;
inline bool request::has_limit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void request::set_has_limit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void request::clear_has_limit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void request::clear_limit() {
  limit_ = 0;
  clear_has_limit();
}
inline ::google::protobuf::int32 request::limit() const {
  return limit_;
}
inline void request::set_limit(::google::protobuf::int32 value) {
  set_has_limit();
  limit_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace benchmark

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_request_2eproto__INCLUDED
